version: 2

references:
  # set_environment_variables: &set_environment_variables
  # run:
  #   name: Set Environment Variables
  #   command: |


  restore_deps: &restore_deps
    restore_cache:
      keys:
        - v1-dependencies-{{ checksum "package.json" }}
        - v1-dependencies-

  restore_git: &restore_git
    restore_cache:
      keys:
        - v1-cynerge-repo-{{ .Environment.CIRCLE_SHA1 }}
        - v1-cynerge-repo-

jobs:
  checkout-code:
    docker:
      - image: circleci/node:7.10
    steps:
      - checkout
      - save_cache:
          paths:
            - ./
          key: v1-cynerge-repo-{{ .Environment.CIRCLE_SHA1 }}

  install-deps:
    docker:
      - image: circleci/node:7.10
    steps:
      - <<: *restore_git
      - <<: *restore_deps
      - run:
          name: Install Dependencies
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
  # lint:
  #   docker:
  #     - image: circleci/node:7.10
  #   steps:
  #     - <<: *restore_git
  #     - <<: *restore_deps
  #     - run:
  #         name: Lint
  #         command: npm run lint
  deploy:
    working_directory: ~/app
    docker:
      - image: circleci/node:8.7.0
    steps:
      - checkout
      - run:
          name: AWS Dep 
          command: |
            sudo apt update
            sudo apt install -y python-pip python-dev
      - run:
          name: AWS Dep 2
          command: |
            sudo pip install awsebcli
      - run:
          name: Deploying
          command: eb deploy $CIRCLE_BRANCH-my-application

workflows:
  version: 2
  build:
    jobs:
      - checkout-code
      - install-deps:
          requires:
            - checkout-code
      # - lint:
      #     requires:
      #       - install-deps
      - deploy:
          requires:
            - install-deps
          filters:
            branches:
              only:
                - master
                - staging
